import React from 'react'
import {Navbar, Nav, NavItem, NavDropdown, MenuItem, FormControl} from 'react-bootstrap'
import ReactMarkdown from 'react-markdown'

var Web3 = require('web3')
var web3 = new Web3(Web3.givenProvider);
if(!web3.currentProvider) {
  web3 = new Web3(new Web3.providers.HttpProvider('https://mainnet.infura.io/zlPxlGZa5NUkLUBHtUVl'));
}

class Reader extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      content: '',
    }
  }
  componentWillReceiveProps(newProps) {
    web3.eth.getTransaction(newProps.match.params.txid, (err,transaction) => {
      console.log(transaction);
      if(!transaction){
        this.setState({content: 'No transaction found'});
        return;
      }
      var hex  = transaction.input.toString();
      let str = decodeURIComponent(hex.replace(/\s+/g, '').replace(/[0-9a-f]{2}/g, '%$&'));
      this.setState({content: str});
    });
  }
  componentWillMount() {
    var hex='000a00230020004c006900760065002000640065006d006f000a000a004300680061006e00670065007300200061007200650020006100750074006f006d00610074006900630061006c006c0079002000720065006e0064006500720065006400200061007300200079006f007500200074007900700065002e000a000a002a00200049006d0070006c0065006d0065006e007400730020005b00470069007400480075006200200046006c00610076006f0072006500640020004d00610072006b0064006f0077006e005d002800680074007400700073003a002f002f006700690074006800750062002e006700690074006800750062002e0063006f006d002f00670066006d002f0029000a002a002000520065006e0064006500720073002000610063007400750061006c002c00200022006e00610074006900760065002200200052006500610063007400200044004f004d00200065006c0065006d0065006e00740073000a002a00200041006c006c006f0077007300200079006f007500200074006f00200065007300630061007000650020006f007200200073006b00690070002000480054004d004c0020002800740072007900200074006f00670067006c0069006e0067002000740068006500200063006800650063006b0062006f007800650073002000610062006f007600650029000a002a00200049006600200079006f007500200065007300630061007000650020006f007200200073006b006900700020007400680065002000480054004d004c002c0020006e006f0020006000640061006e006700650072006f00750073006c00790053006500740049006e006e0065007200480054004d004c006000200069007300200075007300650064002100200059006100790021000a000a002300230020005400610062006c00650073003f000a000a007c002000460065006100740075007200650020007c00200053007500700070006f007200740020007c000a007c0020002d002d002d002d002d002d0020007c0020002d002d002d002d002d002d002d002d002d002d002d0020007c000a007c0020007400610062006c006500730020007c002027140020007c000a007c00200061006c00690067006e006d0065006e00740020007c002027140020007c000a007c002000770065007700740020007c002027140020007c000a000a';
    let str = decodeURIComponent(hex.replace(/\s+/g, '').replace(/[0-9a-f]{2}/g, '%$&'));
    console.log(str);
    this.setState({content: str});
    // web3.eth.getTransaction(this.props.match.params.txid, (err,transaction) => {
    //   if(!transaction){
    //     this.setState({content: 'No transaction found'});
    //     return;
    //   }
    //   var hex  = transaction.input.toString();
      // let str = decodeURIComponent(hex.replace(/\s+/g, '').replace(/[0-9a-f]{2}/g, '%$&'));
      // this.setState({content: str});
    // });
  }

  render() {
    return (
      <ReactMarkdown source={this.state.content} />
    );
  }
}
export default Reader;
